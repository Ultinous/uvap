engines_file: "{{ ENGINES_FILE }}"

environment:
{
  debug_level: 2
  profile: false
  gui: NO
  drop_{{ DROP }}: {}
  kafka_broker_list: "{{ KAFKA_BROKER_LIST }}"
  kafka_topic_prefix: "{{ KAFKA_TOPIC_PREFIX }}."
  backend: TENSORRT_FP16
}

{% for INPUT_STREAM in INPUT_STREAMS %}
data_run:
{
  input:
  {
    file_name: "{{ INPUT_STREAM }}"
    keep_rate: {{ KEEP_RATE }}
    frame_period_ms: {{FRAME_PERIOD_MS}}
  }

  data_flow:
  {
    data_node: {type: FRAME name: "input"}
    data_node: {type: SKELETONS name: "skeletons"}
    data_node: {type: FRAME_INFO name: "frameinfo"}

    process_node:
    {
      type: FRAME_INFO_EXTRACTOR
      name: "frameinfocalc"
      logging: false
      frame_info_extractor_config:
      {
        input_frame: "input"
        output_info: "frameinfo"
      }
    }

    process_node:
    {
      type: SKELETON_ESTIMATOR
      name: "skeleton_estimator"
      skeleton_estimator_config {
        input_frame: "input"
        skeletons: "skeletons"
      }
    }

    # kafka output
    process_node:{type: KAFKA_OUTPUT name: "skeletons_out"  kafka_output_config: {topic_name: "cam.{{loop.index - 1}}.skeletons.SkeletonRecord.json"   input_node: "skeletons"}}
    process_node:{type: KAFKA_OUTPUT name: "frameinfo_out"      kafka_output_config: {topic_name: "cam.{{loop.index - 1}}.frameinfo.FrameInfoRecord.json"        input_node: "frameinfo"}}
    process_node:{type: KAFKA_OUTPUT name: "vid_out"        kafka_output_config: {topic_name: "cam.{{loop.index - 1}}.original.Image.jpg"                input_node: "input"}}
  }
}
{% endfor %}
